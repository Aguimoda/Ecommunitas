/**
 * @file index.ts
 * @description √çndice del m√≥dulo de administraci√≥n de Ecommunitas
 * @module Features/Admin
 * @version 1.0.0
 * @author Equipo de Desarrollo Ecommunitas
 * @created 2024
 * 
 * Este archivo centraliza todas las exportaciones relacionadas con la funcionalidad
 * de administraci√≥n del sistema. Proporciona un punto √∫nico de acceso a todos los
 * componentes, servicios, stores, composables, utilidades y tipos relacionados
 * con la gesti√≥n administrativa, moderaci√≥n y an√°lisis del sistema.
 * 
 * ARQUITECTURA DEL M√ìDULO:
 * ========================
 * 
 * üè™ STORES (Estado Global):
 * - useAdminStore: Store principal de Pinia para gesti√≥n administrativa
 * - Cache de datos administrativos con invalidaci√≥n inteligente
 * - Estado de filtros, paginaci√≥n y b√∫squedas
 * - Gesti√≥n de permisos y roles administrativos
 * - Optimizaci√≥n de rendimiento con lazy loading
 * 
 * üîß SERVICIOS (API):
 * - adminService: Cliente HTTP para operaciones administrativas
 * - Gesti√≥n de usuarios y moderaci√≥n
 * - Estad√≠sticas y analytics del sistema
 * - Logs del sistema y auditor√≠a
 * - Configuraci√≥n global del sistema
 * - Reportes y exportaci√≥n de datos
 * 
 * üß© COMPONENTES (UI):
 * - AdminDashboard: Panel principal de administraci√≥n
 * - UserManagement: Gesti√≥n de usuarios
 * - ModerationPanel: Panel de moderaci√≥n
 * - AnalyticsCharts: Gr√°ficos y estad√≠sticas
 * - SystemLogs: Visualizaci√≥n de logs
 * - AdminSettings: Configuraci√≥n del sistema
 * 
 * üìÑ VISTAS (P√°ginas):
 * - Dashboard administrativo principal
 * - Gesti√≥n de usuarios y roles
 * - Panel de moderaci√≥n de contenido
 * - Analytics y reportes
 * - Logs del sistema
 * - Configuraci√≥n global
 * 
 * üéØ COMPOSABLES (L√≥gica Reutilizable):
 * - useAdmin: Gesti√≥n general administrativa
 * - useModeration: Moderaci√≥n de contenido
 * - useAdminUsers: Gesti√≥n de usuarios
 * - useSystemLogs: Manejo de logs del sistema
 * - useAdminAnalytics: Analytics y estad√≠sticas
 * 
 * üõ†Ô∏è UTILIDADES (Helpers):
 * - Constantes de roles y estados
 * - Formateo de datos y n√∫meros
 * - Validaci√≥n de permisos
 * - Procesamiento de estad√≠sticas
 * - Exportaci√≥n de datos
 * - C√°lculos de m√©tricas
 * 
 * üìä TIPOS (TypeScript):
 * - AdminStats: Estad√≠sticas administrativas
 * - AdminAnalytics: Datos de analytics
 * - ModerationItem: Elemento de moderaci√≥n
 * - AdminUser: Usuario con datos administrativos
 * - SystemLog: Log del sistema
 * - AdminResponse: Respuestas de la API admin
 * 
 * FUNCIONALIDADES PRINCIPALES:
 * ============================
 * 
 * üë• GESTI√ìN DE USUARIOS:
 * - Visualizaci√≥n completa de usuarios registrados
 * - Edici√≥n de perfiles y roles de usuario
 * - Suspensi√≥n y activaci√≥n de cuentas
 * - Gesti√≥n de permisos granulares
 * - Historial de actividad de usuarios
 * - B√∫squeda avanzada y filtros
 * 
 * üõ°Ô∏è MODERACI√ìN DE CONTENIDO:
 * - Cola de moderaci√≥n de art√≠culos
 * - Revisi√≥n de reportes de usuarios
 * - Aprobaci√≥n/rechazo de contenido
 * - Gesti√≥n de contenido inapropiado
 * - Sistema de alertas autom√°ticas
 * - Herramientas de moderaci√≥n masiva
 * 
 * üìä ANALYTICS Y ESTAD√çSTICAS:
 * - Dashboard con m√©tricas clave del sistema
 * - Gr√°ficos de crecimiento de usuarios
 * - Estad√≠sticas de uso y actividad
 * - An√°lisis de comportamiento
 * - Reportes personalizables
 * - Exportaci√≥n de datos en m√∫ltiples formatos
 * 
 * üîç LOGS Y AUDITOR√çA:
 * - Visualizaci√≥n de logs del sistema
 * - Filtrado por nivel de severidad
 * - B√∫squeda en logs por fecha y contenido
 * - Alertas de errores cr√≠ticos
 * - Trazabilidad de acciones administrativas
 * - Exportaci√≥n de logs para an√°lisis
 * 
 * ‚öôÔ∏è CONFIGURACI√ìN DEL SISTEMA:
 * - Configuraci√≥n global de la aplicaci√≥n
 * - Gesti√≥n de par√°metros del sistema
 * - Configuraci√≥n de notificaciones
 * - Ajustes de seguridad
 * - Configuraci√≥n de APIs externas
 * - Mantenimiento del sistema
 * 
 * üîê ROLES Y PERMISOS:
 * - Sistema jer√°rquico de roles administrativos
 * - Permisos granulares por funcionalidad
 * - Validaci√≥n de autorizaci√≥n en tiempo real
 * - Gesti√≥n de acceso a secciones
 * - Auditor√≠a de cambios de permisos
 * 
 * üìà REPORTES Y EXPORTACI√ìN:
 * - Generaci√≥n de reportes autom√°ticos
 * - Exportaci√≥n a CSV, Excel, PDF
 * - Reportes programados
 * - Dashboards personalizables
 * - M√©tricas de rendimiento
 * 
 * CONSTANTES Y CONFIGURACI√ìN:
 * ===========================
 * 
 * üè∑Ô∏è **ROLES ADMINISTRATIVOS**:
 * - SUPER_ADMIN: Acceso completo al sistema
 * - ADMIN: Gesti√≥n general sin configuraci√≥n cr√≠tica
 * - MODERATOR: Moderaci√≥n de contenido √∫nicamente
 * - SUPPORT: Soporte a usuarios
 * 
 * üìã **ESTADOS DE MODERACI√ìN**:
 * - PENDING: Pendiente de revisi√≥n
 * - APPROVED: Aprobado
 * - REJECTED: Rechazado
 * - FLAGGED: Marcado para revisi√≥n
 * 
 * üìä **NIVELES DE LOG**:
 * - ERROR: Errores cr√≠ticos
 * - WARN: Advertencias
 * - INFO: Informaci√≥n general
 * - DEBUG: Informaci√≥n de depuraci√≥n
 * 
 * VENTAJAS DE LA ARQUITECTURA:
 * ============================
 * 
 * ‚úÖ **Importaciones Limpias**: 
 *    `import { useAdminStore, adminService } from '@/features/admin'`
 * 
 * ‚úÖ **Gesti√≥n Completa**: 
 *    Todas las herramientas administrativas centralizadas
 * 
 * ‚úÖ **Seguridad Robusta**: 
 *    Validaci√≥n de permisos en m√∫ltiples capas
 * 
 * ‚úÖ **Analytics Avanzados**: 
 *    M√©tricas detalladas y reportes personalizables
 * 
 * ‚úÖ **Moderaci√≥n Eficiente**: 
 *    Herramientas potentes para gesti√≥n de contenido
 * 
 * ‚úÖ **Tipado Fuerte**: 
 *    TypeScript para mayor seguridad
 * 
 * ‚úÖ **Escalabilidad**: 
 *    Preparado para crecimiento del sistema
 * 
 * ‚úÖ **Utilidades Extensas**: 
 *    Helpers para todas las operaciones administrativas
 * 
 * @example
 * ```typescript
 * // Uso b√°sico del m√≥dulo de administraci√≥n
 * import { 
 *   useAdminStore, 
 *   adminService,
 *   useModeration,
 *   ADMIN_ROLES,
 *   formatNumber,
 *   type AdminStats 
 * } from '@/features/admin'
 * 
 * // En un componente Vue
 * const adminStore = useAdminStore()
 * const { moderationQueue, approveItem } = useModeration()
 * 
 * // Obtener estad√≠sticas del sistema
 * const stats: AdminStats = await adminService.getSystemStats()
 * 
 * // Moderar un art√≠culo
 * await approveItem('item-123', {
 *   reason: 'Contenido apropiado',
 *   moderatorId: 'admin-456'
 * })
 * 
 * // Verificar permisos
 * if (adminStore.hasRole(ADMIN_ROLES.MODERATOR)) {
 *   // Mostrar herramientas de moderaci√≥n
 * }
 * 
 * // Formatear n√∫meros para mostrar
 * const formattedUsers = formatNumber(stats.totalUsers)
 * ```
 */

// Components
export * from './components'

// Views
export * from './views'

// Services
export { adminService } from './services/adminService'
export type {
  AdminStats,
  AdminAnalytics,
  ModerationItem,
  AdminUser,
  SystemLog,
  AdminResponse
} from './services/adminService'

// Store
export { useAdminStore } from './stores/adminStore'
export type {
  AdminFilters,
  AdminPagination,
  AdminCache,
  AdminState
} from './stores/adminStore'

// Composables
export {
  useAdmin,
  useModeration,
  useAdminUsers,
  useSystemLogs,
  useAdminAnalytics
} from './composables/useAdmin'

// Utilities
export {
  // Constants
  ADMIN_ROLES,
  MODERATION_STATUSES,
  LOG_LEVELS,
  ITEM_CATEGORIES,
  
  // Role utilities
  getRoleLabel,
  getRoleColor,
  getRoleIcon,
  canManageRole,
  getAvailableRoles,
  
  // Status utilities
  getStatusLabel,
  getStatusColor,
  getStatusIcon,
  
  // Log level utilities
  getLogLevelLabel,
  getLogLevelColor,
  getLogLevelIcon,
  
  // Category utilities
  getCategoryLabel,
  getCategoryIcon,
  
  // Formatting utilities
  formatNumber,
  formatPercentage,
  formatCurrency,
  formatDate,
  formatRelativeTime,
  
  // Validation utilities
  isValidEmail,
  isValidRole,
  isValidStatus,
  isValidLogLevel,
  isValidCategory,
  
  // Data processing utilities
  calculateGrowthRate,
  calculatePercentage,
  groupByPeriod,
  sortByDate,
  filterByDateRange,
  
  // Statistics utilities
  calculateStats,
  generateChartData,
  
  // Search and filter utilities
  searchItems,
  filterItems,
  
  // Export utilities
  exportToCSV,
  
  // Specific admin utilities
  getModerationItemPriority,
  getUserRiskScore,
  getSystemHealthScore
} from './utils/adminUtils'

export type {
  AdminRole,
  ModerationStatus,
  LogLevel,
  ItemCategory
} from './utils/adminUtils'