# ============================================================================
# ARCHIVO DE CONFIGURACIÓN DE VARIABLES DE ENTORNO - ECOMMUNITAS BACKEND
# ============================================================================
#
# Este archivo contiene todas las variables de entorno necesarias para
# configurar y ejecutar el backend de Ecommunitas. Copia este archivo
# como .env y configura los valores según tu entorno.
#
# INSTRUCCIONES DE USO:
# 1. Copia este archivo: cp .env.example .env
# 2. Configura cada variable según tu entorno
# 3. NUNCA subas el archivo .env al repositorio
# 4. Mantén las credenciales seguras
#
# ENTORNOS SOPORTADOS:
# - development: Desarrollo local
# - production: Servidor de producción
# - test: Entorno de testing
#
# ============================================================================

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE BASE DE DATOS
# ----------------------------------------------------------------------------
# MongoDB Atlas o instancia local de MongoDB
# Formato: mongodb+srv://usuario:contraseña@cluster.mongodb.net/basedatos
# Para desarrollo local: mongodb://localhost:27017/ecommunitas
MONGO_URI=mongodb+srv://<usuario>:<contraseña>@cluster0.example.mongodb.net/ecomunitas?retryWrites=true&w=majority

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DEL SERVIDOR
# ----------------------------------------------------------------------------
# Puerto donde se ejecutará el servidor (3000 para desarrollo, variable en producción)
PORT=3000

# Entorno de ejecución (development, production, test)
NODE_ENV=development

# URL del frontend para configuración de CORS
FRONTEND_URL=http://localhost:5173

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE AUTENTICACIÓN JWT
# ----------------------------------------------------------------------------
# Secreto para firmar tokens JWT (usar una cadena larga y segura en producción)
# Generar con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=tu_secreto_jwt

# Tiempo de expiración de tokens JWT (30d = 30 días, 1h = 1 hora)
JWT_EXPIRE=30d

# Tiempo de expiración de cookies JWT en días
JWT_COOKIE_EXPIRE=30

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE CLOUDINARY (ALMACENAMIENTO DE IMÁGENES)
# ----------------------------------------------------------------------------
# Servicio de almacenamiento en la nube para imágenes de usuarios e items
# Obtener credenciales en: https://cloudinary.com/console
CLOUDINARY_CLOUD_NAME=tu_cloud_name
CLOUDINARY_API_KEY=tu_api_key
CLOUDINARY_API_SECRET=tu_api_secret

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE CARGA DE ARCHIVOS
# ----------------------------------------------------------------------------
# Directorio local temporal para archivos (antes de subir a Cloudinary)
FILE_UPLOAD_PATH=./uploads

# Tamaño máximo de archivo en bytes (5MB = 5000000 bytes)
MAX_FILE_SIZE=5000000

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE CORREO ELECTRÓNICO (OPCIONAL)
# ----------------------------------------------------------------------------
# Para funcionalidades de recuperación de contraseña y notificaciones
# Configurar con tu proveedor de email (Gmail, SendGrid, etc.)
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=tu_email@example.com
SMTP_PASS=tu_contraseña_email
EMAIL_FROM=noreply@ecommunitas.com

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE REDIS (OPCIONAL)
# ----------------------------------------------------------------------------
# Para caché y sesiones (opcional, mejora el rendimiento)
# REDIS_URL=redis://localhost:6379

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE LOGGING
# ----------------------------------------------------------------------------
# Nivel de logging (error, warn, info, debug)
LOG_LEVEL=info

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE SEGURIDAD
# ----------------------------------------------------------------------------
# Rate limiting - máximo de requests por ventana de tiempo
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000

# ----------------------------------------------------------------------------
# NOTAS IMPORTANTES:
# ----------------------------------------------------------------------------
# - Cambia TODOS los valores por defecto antes de usar en producción
# - Usa contraseñas y secretos fuertes
# - Nunca compartas credenciales en repositorios públicos
# - Considera usar servicios de gestión de secretos en producción
# - Revisa regularmente y rota las credenciales